{
    "collab_server" : "",
    "contents" : "#require(\"ggplot2\")\nrequire(\"lunar\")\nrequire(\"dplyr\")\nrequire(\"lubridate\")\nrequire(\"leaflet\")\nrequire(\"maps\")\nrequire(\"rCharts\")\nrequire(\"googleVis\")\nlibrary(stringr)\n\nptm <- proc.time()\nmessage(\"reading csv file\")\n# # https://catalog.data.gov/dataset/crimes-2001-to-present-398a4\n# ds_raw <- read.csv(\"D:/temp/Crimes_-_2001_to_present.csv\", nrows = 1000, stringsAsFactors = F)\nds_raw <- read.csv(\"D:/temp/Crimes_-_2001_to_present.csv\", stringsAsFactors = F)\n#\nprint(proc.time() - ptm)\n\nmessage(\"calculating moon phases\")\nds_crimes <- ds_raw %>%\n    select(id = ID,\n           date = Date,\n           type = Primary.Type,\n           distr = District,\n           lat = Latitude,\n           lon = Longitude) %>%\n    mutate(date = parse_date_time(date, c(\"%m/%d/%y %I:%M%S %p\"), tz = \"America/Chicago\"),\n           day = as.Date(date),\n           year = year(day),\n           month = month(day),\n           type = as.factor(type),\n           distr = as.factor(distr),\n           moon = as.factor(lunar.phase(date, name = 4)))\nprint(proc.time() - ptm)\n\nmessage(\"creating tidy data\")\ncrimes.tidy <- ds_crimes %>%\n    filter(year > 2008) %>%\n    filter(!is.na(moon) & !is.na(distr))\nprint(proc.time() - ptm)\n\nmessage(\"preparing final datasets\")\ncrimes.all <- crimes.tidy %>%\n    group_by(moon, day, year, month, type, distr) %>%\n    filter(!is.na(moon) & !is.na(distr)) %>%\n    summarise(cnt = n())\n\ncrimes.by_day <- crimes.all %>%\n    group_by(day, year, month, moon) %>%\n    summarize(cnt = sum(cnt))\n\nprint(proc.time() - ptm)\nrm(list = c(\"ds_raw\", \"ds_crimes\"))\nmessage(\"saving image to disk\")\nsave.image(\"data/crimes.RData\")\nmessage(\"done\")\nprint(proc.time() - ptm)\n\ncrimes.by_yearmonth <- crimes.by_day %>%\n    mutate(ym = as.POSIXct(paste(year, month, \"01\", sep = \"-\"))) %>%\n    #mutate(ym = as.numeric(as.POSIXct(paste(year, month, \"01\", sep = \"-\")))) %>%\n    group_by(ym, moon) %>%\n    summarize(cnt = sum(cnt)) %>%\n    filter(!is.na(ym))\n\nplot(gvisAnnotationChart(crimes.by_yearmonth,\n                         datevar = \"ym\",\n                         numvar = \"cnt\",\n                         idvar = \"moon\",\n                         options = list(\n                             colors=\"['#e41a1c', '#377eb8', '#4daf4a', '#984ea3']\",\n                             curvetype = \"function\"\n                         )))\n\n# plot(gvisSteppedAreaChart(crimes.by_yearmonth,\n#                           xvar = \"ym\",\n#                           yvar = \"cnt\",\n#                           options = list(\n#                             colors=\"['#e41a1c', '#377eb8', '#4daf4a', '#984ea3']\"\n#                           )))\n\n# t <- \"line\"\n# p2 <- Rickshaw$new()\n# p2$layer(cnt ~ ym, group = \"moon\", data = crimes.by_yearmonth, type = t,\n#          colors = c(\"#e41a1c\", \"#377eb8\", \"#4daf4a\", \"#984ea3\"))\n# p2$set(slider = TRUE)\n# p2\n# \n\n# \n# full.ds <- subset(crimes.by_day, moon == \"Full\")\n# nonfull.ds <- subset(crimes.by_day, moon != \"Full\")\n# full.sims <- matrix(data = sample(full.ds$cnt,\n#                                   100 * 100,\n#                                   replace = T),\n#                     nrow = 100,\n#                     ncol = 100)\n# nonfull.sims <- matrix(data = sample(nonfull.ds$cnt,\n#                                      100 * 100,\n#                                      replace = T),\n#                        nrow = 100,\n#                        ncol = 100)\n# full.means <- apply(full.sims, 1, mean)\n# nonfull.means <- apply(nonfull.sims, 1, mean)\n# \n# ggplot() +\n#     geom_density(data = as.data.frame(full.means),\n#                  aes(x = full.means),\n#                  color = \"#386cb0\",\n#                  size = 1.2,\n#                  show.legend = F) +\n#     stat_density(data = as.data.frame(full.means),\n#                  aes(x = full.means, color = \"Full\"),\n#                  geom = \"line\",\n#                  position = \"identity\") +\n#     geom_vline(xintercept = mean(full.means) + c(-1,1) * qnorm(.975) * sd(full.means),\n#                linetype = \"dashed\",\n#                color = \"#386cb0\") +\n#     geom_vline(xintercept = mean(full.means),\n#                color = \"#386cb0\") +\n#     geom_density(data = as.data.frame(nonfull.means),\n#                  aes(x = nonfull.means),\n#                  color = \"salmon\",\n#                  show.legend = F) +\n#     stat_density(data = as.data.frame(nonfull.means),\n#                  aes(x = nonfull.means, color = \"Other\"),\n#                  geom = \"line\",\n#                  position = \"identity\") +\n#     geom_vline(xintercept = mean(nonfull.means) + c(-1,1) * qnorm(.975) * sd(nonfull.means),\n#                linetype = \"dashed\",\n#                color = \"salmon\") +\n#     geom_vline(xintercept = mean(nonfull.means),\n#                color = \"salmon\") +\n#     scale_colour_manual(name = \"moon\", \n#                         values = c(\"Full\" = \"#386cb0\", \"Other\"=\"salmon\"),\n#                         labels = c(\"Full\", \"Other\"),\n#                         guide = \"legend\")\n\n# plt <- colorFactor(c(\"#e41a1c\", \"#377eb8\", \"#4daf4a\", \"#984ea3\"), domain = levels(crimes.tidy$moon))\n# crimes.geo <- crimes.tidy %>%\n#     filter(year == 2011 & month == 6 &!is.na(lat) & !is.na(lon))\n# leaflet(crimes.geo) %>%\n#     addTiles() %>%  # Add default OpenStreetMap map tiles\n#     # addLegend(position = \"topright\",\n#     #           pal = plt,\n#     #           values = ~moon,\n#     #           opacity = .5,\n#     #           title = \"Moon\") %>%\n#     # addCircleMarkers(lng = ~lon,\n#     #                  lat = ~lat,\n#     #                  radius = 3,\n#     #                  color = ~plt(moon),\n#     #                  popup = ~type,\n#     #                  opacity = .5)\n#     addMarkers(lng = ~lon,\n#                lat = ~lat,\n#                popup = ~type,\n#                clusterOptions = markerClusterOptions())\n#     # addCircles(lng = ~lon,\n#     #            lat = ~lat,\n#     #            fillColor = \"orange\")\n#                         ",
    "created" : 1468339081341.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "57654851",
    "id" : "51CB9F7B",
    "lastKnownWriteTime" : 1468333922,
    "last_content_update" : 1468333922,
    "path" : "D:/Coursera/data_science/gitrepo/DevelopingDataProducts/DDPCourseProject/R/crimes.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}